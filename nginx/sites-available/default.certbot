##
# You should look at the following URL's in order to grasp a solid understanding of Nginx 
# configuration files in order to fully unleash the power of Nginx. 
# https://www.nginx.com/resources/wiki/start/ 
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/ 
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and leave it as 
# reference inside of sites-available where it will continue to be updated by the nginx packaging 
# team.
#
# This file will automatically load configuration files provided by other applications, such as 
# Drupal or Wordpress. These applications will be made available underneath a path with that 
# package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
    if ($host = mqtt.lopeztola.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = www.lopeztola.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = domoticae.lopeztola.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host != 10.68.1.100) {
        return 401;
    } # managed by el menda

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    server_name lopeztola.com;

    auth_basic "Area restringida";
    auth_basic_user_file /home/pi/.htpasswd;

    access_log /var/log/nginx/servidorHTTP.log;

    location / {
	# First attempt to serve request as file, then as directory, then fall back to 
	# displaying a 404.
	try_files $uri $uri/ =404;
    }

    location /termostatix/ {
	proxy_pass http://10.68.1.60/;
    }
    location /termostatix {
        proxy_pass http://10.68.1.60/;
    }

    location /luzEscalera/ {
        proxy_pass http://10.68.1.80/;
    }

    location /luzEscalera {
        proxy_pass http://10.68.1.80;
    }

    location /navidad/ {
        proxy_pass http://10.68.1.51/;
    }

    location /navidad {
        proxy_pass http://10.68.1.51;
    }

    location /garaje/ {
	proxy_pass http://10.68.0.52/;
    }

    location /garaje {
        proxy_pass http://10.68.0.52;
    }

    location /camara {
        proxy_pass http://10.68.0.51/index.html;
    }

    location /camara/ {
        proxy_pass http://10.68.0.51/index.html;
    }

    location /pre/ {
        proxy_pass http://10.68.0.101/;
    }

    #Grafana
    location /grafana/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Access-Control-Allow-Origin' $http_origin;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Type,Content-Length,Content-Range';
        add_header 'Access-Control-Allow-Headers'
                   'Accept,
                    Authorization,
                    Cache-Control,
                    Content-Type,
                    DNT,
                    If-Modified-Since,
                    Keep-Alive,
                    Origin,
                    User-Agent,
                    X-Requested-With' always;
        if ($request_method = 'OPTIONS') {
          return 204;
        }            
        proxy_pass http://localhost:3000/;
    }


	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}
	# deny access to .htaccess files, if Apache's document root concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

#Lo ha incluido cetrbot al genera los certificados
#    listen [::]:443 ssl ipv6only=on; # managed by Certbot
#    listen 443 ssl; # managed by Certbot
#    ssl_certificate /etc/letsencrypt/live/lopeztola.com-0001/fullchain.pem; # managed by Certbot
#    ssl_certificate_key /etc/letsencrypt/live/lopeztola.com-0001/privkey.pem; # managed by Certbot
#    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
        # SSL configuration
        #
        #listen 443 ssl default_server; #modificada para HTTPS

        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic. See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration. See: 
        # https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package Don't use them in a production 
        # server!
        #
        # include snippets/snakeoil.conf;

    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;

    server_name domoticae.lopeztola.com;

    auth_basic "Area restringida";
    auth_basic_user_file /home/pi/.htpasswd;

    root /var/www/html;

    ssl_certificate /etc/letsencrypt/live/lopeztola.com-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lopeztola.com-0001/privkey.pem; # managed by Certbot

#    ssl on;
#    ssl_session_cache builtin:1000 shared:SSL:10m;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
#    ssl_prefer_server_ciphers on;

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    access_log /var/log/nginx/servidorHTTPS.log;

    location / {
                # First attempt to serve request as file, then as directory, then fall back to 
                # displaying a 404.
                try_files $uri $uri/main.html =404;
    }    
        location /termostatix/ {
                proxy_pass http://10.68.1.60/;
        }
        location /termostatix {
                proxy_pass http://10.68.1.60;
        }
        location /navidad/ {
                proxy_pass http://10.68.1.81/;
        }
        location /navidad {
                proxy_pass http://10.68.1.81;
        }
        location /luzescalera/ {
                proxy_pass http://10.68.1.80/;
        }
        location /garaje {
                proxy_pass http://10.68.1.80;
        }
        location /camara {
                proxy_pass http://10.68.0.51/;
        }
        location /camara/ {
                proxy_pass http://10.68.0.51/;
        }
        location /camaraws/ {
                proxy_pass http://10.68.0.51:88;
	        proxy_http_version 1.1;
        	proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "Upgrade";
        	proxy_set_header Host $host;
        }

	#Google assistant
	location /smarthome {
		proxy_pass http://10.68.0.101:8888/smarthome;
	}
        location /requestsync {
                proxy_pass http://10.68.0.101:8888/requestsync;
        }
        location /login {
                proxy_pass http://10.68.0.101:8888/login;
        }
        location /trueauth {
                proxy_pass http://10.68.0.101:8888/trueauth;
        }
        location /truetoken {
                proxy_pass http://10.68.0.101:8888/truetoken;
        }
        location /fakeauth {
                proxy_pass http://10.68.0.101:8888/fakeauth;
        }
        location /faketoken/ {
                proxy_pass http://10.68.0.101:8888/faketoken/;
        }

	location /bombilla/ {
		proxy_pass http://10.68.0.80/;
	}
        location /pre/ {
                proxy_pass http://10.68.0.101/;
        }
	location /termopre/ {
		proxy_pass http://10.68.0.60/;
	}


    location /ifttt/v1/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Fix the â€œIt appears that your reverse proxy set up is broken" error.
      proxy_pass http://10.68.1.60/;
      proxy_read_timeout 90;

      proxy_redirect http://10.68.1.60/ https://jlopezt.dlinkddns.com/ifttt/v1/;
    }  
}

#***********************************
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name mqtt.lopeztola.com;

    root /var/www/html;

    ssl_certificate /etc/letsencrypt/live/lopeztola.com-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lopeztola.com-0001/privkey.pem; # managed by Certbot

#    ssl on;
#    ssl_session_cache builtin:1000 shared:SSL:10m;
#    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
#    ssl_prefer_server_ciphers on;

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


    access_log /var/log/nginx/servidorMQTTS.log;

    location /mqtt {
        proxy_pass http://10.68.1.100:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    location /premqtt {
        proxy_pass http://10.68.0.101:9000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

#    location /mqttpro {
#        proxy_pass http://10.68.1.100:9000;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "Upgrade";
#        proxy_set_header Host $host;
#    }
}

#***********************************
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that to sites-enabled/ 
# to enable it.
#
#server {
#	listen 80; listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com; index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


#AÃ±adido por certbot para redireccionar el trafico
#server {
#    if ($host = lopeztola.com) {
#        return 301 https://$host$request_uri;
#    } # managed by Certbot
#
#
#
#    listen 80 default_server;
#    listen [::]:80 default_server;
#
#    server_name lopeztola.com;
#    return 404; # managed by Certbot
#
#
#}
